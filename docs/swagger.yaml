openapi: 3.0.3
info:
  title: Church Management System API
  description: |
    API compl√®te pour la gestion d'√©glise moderne et s√©curis√©e.
    
    ## üîí Syst√®me CSRF Automatique
    - **Aucune configuration manuelle requise** pour les tokens CSRF
    - **G√©n√©ration automatique** √† la connexion
    - **Envoi automatique** sur toutes les requ√™tes prot√©g√©es
    - **Validation automatique** c√¥t√© serveur
    - **Expiration automatique** avec d√©connexion intelligente
    
    ## üöÄ Fonctionnalit√©s
    - Gestion compl√®te des utilisateurs et √©glises
    - Syst√®me de r√©seaux et groupes
    - Statistiques en temps r√©el
    - Gestion des services et cultes
    - Syst√®me de permissions avanc√©
    
    ## üóÑÔ∏è Base de donn√©es
    - **PostgreSQL** avec Prisma ORM
    - **Migration automatique** depuis MongoDB
    - **Relations complexes** g√©r√©es nativement
  version: 2.0.0
  contact:
    name: Church Management System
    email: contact@church-system.local
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: ${APP_BACKEND_URL:-http://localhost:5001}/api
    description: Serveur de d√©veloppement
  - url: ${APP_BACKEND_URL:-http://localhost:5001}/api
    description: Serveur de production

tags:
  - name: Authentication
    description: Endpoints d'authentification et gestion des sessions
  - name: Users
    description: Gestion des utilisateurs et membres
  - name: Churches
    description: Gestion des √©glises et implantations
  - name: Networks
    description: Gestion des r√©seaux et groupes
  - name: Groups
    description: Gestion des groupes et membres
  - name: Departments
    description: Gestion des d√©partements
  - name: Services
    description: Gestion des services et cultes
  - name: Statistics
    description: Statistiques et tableaux de bord
  - name: Admin
    description: Fonctionnalit√©s d'administration
  - name: Carousel
    description: Gestion du carousel d'images
  - name: Previsionnels
    description: Gestion des pr√©visionnels
  - name: Assistance
    description: Gestion de l'assistance
  - name: Chaine Impact
    description: Gestion de la cha√Æne d'impact
  - name: Messages
    description: Syst√®me de messagerie
  - name: Emergency
    description: Fonctionnalit√©s d'urgence
  - name: Roles
    description: Gestion des r√¥les utilisateur
  - name: Preferences
    description: Pr√©f√©rences utilisateur
  - name: Testimonies
    description: Gestion des t√©moignages
  - name: Activities
    description: Historique des activit√©s
  - name: Security
    description: Statistiques de s√©curit√©

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT token obtenu lors de la connexion.
        Inclut automatiquement le token CSRF dans le header X-CSRF-Token.
    
    CSRFProtection:
      type: apiKey
      in: header
      name: X-CSRF-Token
      description: |
        Token CSRF g√©n√©r√© automatiquement √† la connexion.
        **Aucune action manuelle requise** - g√©r√© automatiquement par le syst√®me.

  schemas:
    User:
      type: object
      required:
        - username
        - pseudo
        - password
        - role
        - genre
        - qualification
      properties:
        id:
          type: string
          format: uuid
          description: Identifiant unique de l'utilisateur
        username:
          type: string
          description: Nom complet de l'utilisateur
          example: "Emmanuel KOUAME"
        pseudo:
          type: string
          description: Pseudo unique pour la connexion
          example: "emmanuel.k"
        password:
          type: string
          format: password
          description: Mot de passe (requis pour la cr√©ation)
          minLength: 6
        role:
          type: string
          enum: [ADMIN, SUPER_ADMIN, MANAGER, SUPERVISEUR, COLLECTEUR_RESEAUX, COLLECTEUR_CULTE, MEMBRE]
          description: R√¥le de l'utilisateur dans le syst√®me
          example: "MANAGER"
        genre:
          type: string
          enum: [HOMME, FEMME, ENFANT]
          description: Genre de l'utilisateur
        tranche_age:
          type: string
          enum: [18-25 ans, 25-35 ans, 35-45 ans, 45-55 ans, 55+ ans]
          description: Tranche d'√¢ge
        profession:
          type: string
          description: Profession de l'utilisateur
        ville_residence:
          type: string
          description: Ville de r√©sidence
        origine:
          type: string
          description: Origine g√©ographique
        situation_matrimoniale:
          type: string
          enum: [C√©libataire, Mari√©(e), Divorc√©(e), Veuf/Veuve]
        niveau_education:
          type: string
          enum: [Primaire, Secondaire, Dipl√¥me du sup√©rieur, Doctorat]
        qualification:
          type: string
          enum: [QUALIFICATION_12, QUALIFICATION_144, QUALIFICATION_1728, LEADER, RESPONSABLE_RESEAU, RESPONSABLE_DEPARTEMENT, REGULIER, IRREGULIER, EN_INTEGRATION, GOUVERNANCE, ECODIM, RESPONSABLE_ECODIM, QUALIFICATION_20738, QUALIFICATION_248832, RESPONSABLE_EGLISE]
          description: Qualification spirituelle
        email:
          type: string
          format: email
          description: Adresse email
        telephone:
          type: string
          description: Num√©ro de t√©l√©phone
        adresse:
          type: string
          description: Adresse compl√®te
        eglise_locale_id:
          type: string
          format: uuid
          description: ID de l'√©glise locale
        departement_id:
          type: string
          format: uuid
          description: ID du d√©partement
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Church:
      type: object
      required:
        - nom
        - adresse
        - ville
      properties:
        id:
          type: string
          format: uuid
        nom:
          type: string
          description: Nom de l'√©glise
          example: "√âglise Centrale"
        adresse:
          type: string
          description: Adresse compl√®te
        ville:
          type: string
          description: Ville de l'√©glise
        latitude:
          type: number
          format: double
          description: Latitude GPS
        longitude:
          type: number
          format: double
          description: Longitude GPS
        population:
          type: integer
          description: Population de la ville
        nombre_membres:
          type: integer
          description: Nombre de membres de l'√©glise
        description:
          type: string
          description: Description de l'√©glise
        type:
          type: string
          enum: [EGLISE, MISSION]
        image:
          type: string
          description: URL de l'image de l'√©glise
        responsable_id:
          type: string
          format: uuid
          description: ID du responsable de l'√©glise
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Network:
      type: object
      required:
        - nom
        - church_id
      properties:
        id:
          type: string
          format: uuid
        nom:
          type: string
          description: Nom du r√©seau
        description:
          type: string
          description: Description du r√©seau
        responsable_id:
          type: string
          format: uuid
          description: ID du responsable principal
        responsable2_id:
          type: string
          format: uuid
          description: ID du responsable secondaire
        church_id:
          type: string
          format: uuid
          description: ID de l'√©glise
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Group:
      type: object
      required:
        - nom
        - network_id
      properties:
        id:
          type: string
          format: uuid
        nom:
          type: string
          description: Nom du groupe
        description:
          type: string
          description: Description du groupe
        network_id:
          type: string
          format: uuid
          description: ID du r√©seau
        responsable1_id:
          type: string
          format: uuid
          description: ID du responsable principal
        responsable2_id:
          type: string
          format: uuid
          description: ID du responsable secondaire
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Service:
      type: object
      required:
        - date
        - culte
        - eglise_id
      properties:
        id:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
          description: Date et heure du service
        culte:
          type: string
          description: Type de culte
          example: "Culte du dimanche"
        orateur:
          type: string
          description: Nom de l'orateur
        theme:
          type: string
          description: Th√®me du culte
        nombre_present:
          type: integer
          description: Nombre de personnes pr√©sentes
        eglise_id:
          type: string
          format: uuid
          description: ID de l'√©glise
        responsable_id:
          type: string
          format: uuid
          description: ID du responsable
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    LoginRequest:
      type: object
      required:
        - pseudo
        - password
      properties:
        pseudo:
          type: string
          description: Pseudo de l'utilisateur
          example: "emmanuel.k"
        password:
          type: string
          format: password
          description: Mot de passe
          example: "motdepasse123"

    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        token:
          type: string
          description: JWT token pour l'authentification
        csrfToken:
          type: string
          description: Token CSRF g√©n√©r√© automatiquement
        user:
          $ref: '#/components/schemas/User'

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          description: Message d'erreur lisible
        code:
          type: string
          description: Code d'erreur sp√©cifique
        error:
          type: string
          description: D√©tails techniques (optionnel)

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          description: Message de succ√®s
        data:
          description: Donn√©es de la r√©ponse

    Group:
      type: object
      required:
        - nom
        - network_id
      properties:
        id:
          type: string
          format: uuid
        nom:
          type: string
          description: Nom du groupe
        description:
          type: string
          description: Description du groupe
        network_id:
          type: string
          format: uuid
          description: ID du r√©seau
        responsable1_id:
          type: string
          format: uuid
          description: ID du responsable principal
        responsable2_id:
          type: string
          format: uuid
          description: ID du responsable secondaire
        superieur_hierarchique_id:
          type: string
          format: uuid
          description: ID du sup√©rieur hi√©rarchique
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Department:
      type: object
      required:
        - nom
        - description
      properties:
        id:
          type: string
          format: uuid
        nom:
          type: string
          description: Nom du d√©partement
        description:
          type: string
          description: Description du d√©partement
        responsable_id:
          type: string
          format: uuid
          description: ID du responsable
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Previsionnel:
      type: object
      required:
        - network_id
        - date
        - montant
      properties:
        id:
          type: string
          format: uuid
        network_id:
          type: string
          format: uuid
          description: ID du r√©seau
        date:
          type: string
          format: date
          description: Date du pr√©visionnel
        montant:
          type: number
          description: Montant pr√©visionnel
        description:
          type: string
          description: Description du pr√©visionnel
        created_by:
          type: string
          format: uuid
          description: ID du cr√©ateur
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Assistance:
      type: object
      required:
        - type
        - description
        - montant
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          description: Type d'assistance
        description:
          type: string
          description: Description de l'assistance
        montant:
          type: number
          description: Montant de l'assistance
        beneficiaire_id:
          type: string
          format: uuid
          description: ID du b√©n√©ficiaire
        created_by:
          type: string
          format: uuid
          description: ID du cr√©ateur
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ChaineImpact:
      type: object
      required:
        - user_id
        - niveau
        - qualification
        - eglise_id
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
          description: ID de l'utilisateur
        niveau:
          type: integer
          description: Niveau dans la cha√Æne
        qualification:
          type: string
          description: Qualification
        responsable_id:
          type: string
          format: uuid
          description: ID du responsable
        eglise_id:
          type: string
          format: uuid
          description: ID de l'√©glise
        network_id:
          type: string
          format: uuid
          description: ID du r√©seau
        group_id:
          type: string
          format: uuid
          description: ID du groupe
        position_x:
          type: integer
          description: Position X
        position_y:
          type: integer
          description: Position Y
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Message:
      type: object
      required:
        - subject
        - content
        - sender_id
      properties:
        id:
          type: string
          format: uuid
        subject:
          type: string
          description: Sujet du message
        content:
          type: string
          description: Contenu du message
        is_urgent:
          type: boolean
          description: Message urgent
        sender_id:
          type: string
          format: uuid
          description: ID de l'exp√©diteur
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Testimony:
      type: object
      required:
        - nom
        - prenom
        - email
        - telephone
        - eglise_id
        - network_id
        - categorie
        - contenu
      properties:
        id:
          type: string
          format: uuid
        nom:
          type: string
          description: Nom du t√©moin
        prenom:
          type: string
          description: Pr√©nom du t√©moin
        email:
          type: string
          format: email
          description: Email du t√©moin
        telephone:
          type: string
          description: T√©l√©phone du t√©moin
        eglise_id:
          type: string
          format: uuid
          description: ID de l'√©glise
        network_id:
          type: string
          format: uuid
          description: ID du r√©seau
        categorie:
          type: string
          description: Cat√©gorie du t√©moignage
        contenu:
          type: string
          description: Contenu du t√©moignage
        illustrations:
          type: array
          items:
            type: string
          description: Fichiers d'illustration
        is_approved:
          type: boolean
          description: T√©moignage approuv√©
        approved_by:
          type: string
          format: uuid
          description: ID de l'approbateur
        note:
          type: string
          description: Note administrative
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ActivityLog:
      type: object
      required:
        - user_id
        - action
        - entity_type
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
          description: ID de l'utilisateur
        action:
          type: string
          enum: [CREATE, UPDATE, DELETE, LOGIN, LOGOUT, VIEW, EXPORT, IMPORT]
          description: Action effectu√©e
        entity_type:
          type: string
          enum: [USER, NETWORK, GROUP, SERVICE, CHURCH, DEPARTMENT, TESTIMONY, CAROUSEL, PREVISIONNEL, ASSISTANCE, MESSAGE]
          description: Type d'entit√©
        entity_id:
          type: string
          description: ID de l'entit√©
        entity_name:
          type: string
          description: Nom de l'entit√©
        details:
          type: string
          description: D√©tails de l'action
        ip_address:
          type: string
          description: Adresse IP
        user_agent:
          type: string
          description: User Agent
        created_at:
          type: string
          format: date-time

    CarouselImage:
      type: object
      required:
        - title
        - image_url
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          description: Titre de l'image
        description:
          type: string
          description: Description de l'image
        image_url:
          type: string
          description: URL de l'image
        order:
          type: integer
          description: Ordre d'affichage
        is_active:
          type: boolean
          description: Image active
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

  responses:
    UnauthorizedError:
      description: Token d'authentification manquant ou invalide
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Token expir√© ou invalide"
            code: "JWT_INVALID"

    ForbiddenError:
      description: Permissions insuffisantes pour acc√©der √† la ressource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Acc√®s refus√© : permissions insuffisantes"
            code: "INSUFFICIENT_PERMISSIONS"

    CSRFError:
      description: Erreur de validation CSRF
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            missing:
              summary: Token CSRF manquant
              value:
                success: false
                message: "Token CSRF manquant"
                code: "CSRF_TOKEN_MISSING"
            expired:
              summary: Token CSRF expir√©
              value:
                success: false
                message: "Session expir√©e. Veuillez vous reconnecter."
                code: "CSRF_TOKEN_EXPIRED"
            invalid:
              summary: Token CSRF invalide
              value:
                success: false
                message: "Token CSRF invalide"
                code: "CSRF_TOKEN_INVALID"

    ValidationError:
      description: Erreur de validation des donn√©es
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Donn√©es invalides"
            errors:
              - "Le nom d'utilisateur est requis"
              - "L'email doit √™tre valide"

security:
  - BearerAuth: []
  - CSRFProtection: []

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Connexion utilisateur
      description: |
        Authentifie un utilisateur et g√©n√®re automatiquement un token CSRF.
        
        **Fonctionnalit√©s automatiques :**
        - ‚úÖ G√©n√©ration du JWT token
        - ‚úÖ G√©n√©ration automatique du token CSRF
        - ‚úÖ Stockage automatique c√¥t√© client
        - ‚úÖ Aucune configuration manuelle requise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            example:
              pseudo: "${SUPER_ADMIN_PSEUDO:-emmanuel.k}"
              password: "${SUPER_ADMIN_PASSWORD:-motdepasse123}"
      responses:
        '200':
          description: Connexion r√©ussie avec tokens automatiques
          headers:
            X-CSRF-Token:
              description: Token CSRF g√©n√©r√© automatiquement
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              example:
                success: true
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                csrfToken: "2807a399ab4a12dae6b57b00f69b4a3dcbae15b6f052341ef288a3149652a740"
                user:
                  id: "cmejtzdak0001tu584h492qcw"
                  username: "Emmanuel KOUAME"
                  role: "MANAGER"
                  qualification: "GOUVERNANCE"
        '400':
          description: Donn√©es de connexion invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Identifiants incorrects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/me:
    get:
      tags:
        - Authentication
      summary: R√©cup√©rer le profil utilisateur
      description: |
        R√©cup√®re le profil de l'utilisateur connect√© et r√©g√©n√®re automatiquement le token CSRF.
        
        **Fonctionnalit√©s automatiques :**
        - ‚úÖ R√©cup√©ration du profil complet
        - ‚úÖ R√©g√©n√©ration automatique du token CSRF
        - ‚úÖ Mise √† jour automatique c√¥t√© client
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Profil r√©cup√©r√© avec nouveau token CSRF
          headers:
            X-CSRF-Token:
              description: Nouveau token CSRF r√©g√©n√©r√©
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /users:
    get:
      tags:
        - Users
      summary: R√©cup√©rer tous les utilisateurs
      description: |
        R√©cup√®re la liste des utilisateurs avec filtrage automatique par √©glise selon le r√¥le.
        
        **Filtrage automatique :**
        - **Managers** : Voir uniquement les utilisateurs de leur √©glise
        - **Collecteurs** : Voir uniquement les utilisateurs de leur √©glise
        - **Admins** : Voir tous les utilisateurs
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: page
          in: query
          description: Num√©ro de page
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Nombre d'√©l√©ments par page
          schema:
            type: integer
            default: 10
        - name: role
          in: query
          description: Filtrer par r√¥le
          schema:
            type: string
            enum: [ADMIN, SUPER_ADMIN, MANAGER, SUPERVISEUR, COLLECTEUR_RESEAUX, COLLECTEUR_CULTE, MEMBRE]
        - name: qualification
          in: query
          description: Filtrer par qualification
          schema:
            type: string
            enum: [QUALIFICATION_12, QUALIFICATION_144, QUALIFICATION_1728, LEADER, RESPONSABLE_RESEAU, RESPONSABLE_DEPARTEMENT, REGULIER, IRREGULIER, EN_INTEGRATION, GOUVERNANCE, ECODIM, RESPONSABLE_ECODIM, QUALIFICATION_20738, QUALIFICATION_248832, RESPONSABLE_EGLISE]
      responses:
        '200':
          description: Liste des utilisateurs r√©cup√©r√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

    post:
      tags:
        - Users
      summary: Cr√©er un nouvel utilisateur
      description: |
        Cr√©e un nouvel utilisateur avec validation automatique des permissions.
        
        **Restrictions automatiques :**
        - **Managers** : Ne peuvent cr√©er que des utilisateurs de leur √©glise
        - **Managers** : Ne peuvent pas cr√©er d'utilisateurs avec des r√¥les privil√©gi√©s
        - **Admins** : Peuvent cr√©er des utilisateurs dans n'importe quelle √©glise
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Utilisateur cr√©√© avec succ√®s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID de l'utilisateur
        schema:
          type: string
          format: uuid
    get:
      tags:
        - Users
      summary: R√©cup√©rer un utilisateur par ID
      description: R√©cup√®re les d√©tails d'un utilisateur sp√©cifique
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Utilisateur r√©cup√©r√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Utilisateur non trouv√©

    put:
      tags:
        - Users
      summary: Mettre √† jour un utilisateur
      description: |
        Met √† jour un utilisateur existant avec validation des permissions.
        
        **Restrictions automatiques :**
        - **Managers** : Ne peuvent modifier que les utilisateurs de leur √©glise
        - **Managers** : Ne peuvent pas modifier l'√©glise d'un utilisateur
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Utilisateur mis √† jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: Utilisateur non trouv√©

    delete:
      tags:
        - Users
      summary: Supprimer un utilisateur
      description: |
        Supprime un utilisateur avec validation des permissions.
        
        **Restrictions automatiques :**
        - **Managers** : Ne peuvent supprimer que les utilisateurs de leur √©glise
        - **Admins** : Peuvent supprimer n'importe quel utilisateur
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Utilisateur supprim√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: Utilisateur non trouv√©

  /users/profile:
    put:
      tags:
        - Users
      summary: Modifier son propre profil
      description: Permet √† un utilisateur de modifier son propre profil
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Profil mis √† jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /users/profile/image:
    post:
      tags:
        - Users
      summary: Upload d'image de profil
      description: Permet d'uploader une image de profil
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Fichier image (max 5MB)
      responses:
        '200':
          description: Image upload√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

    delete:
      tags:
        - Users
      summary: Supprimer l'image de profil
      description: Supprime l'image de profil de l'utilisateur
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Image supprim√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /users/available:
    get:
      tags:
        - Users
      summary: R√©cup√©rer les utilisateurs disponibles
      description: R√©cup√®re la liste des utilisateurs disponibles pour les admins, collecteurs et managers
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Liste des utilisateurs disponibles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /users/governance:
    get:
      tags:
        - Users
      summary: R√©cup√©rer les utilisateurs GOUVERNANCE
      description: R√©cup√®re la liste des utilisateurs avec la qualification GOUVERNANCE
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Liste des utilisateurs GOUVERNANCE
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /users/non-isoles:
    get:
      tags:
        - Users
      summary: R√©cup√©rer les utilisateurs non isol√©s
      description: R√©cup√®re la liste des utilisateurs non isol√©s
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Liste des utilisateurs non isol√©s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /users/isoles:
    get:
      tags:
        - Users
      summary: R√©cup√©rer les utilisateurs isol√©s
      description: R√©cup√®re la liste des utilisateurs isol√©s
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Liste des utilisateurs isol√©s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /users/retired:
    get:
      tags:
        - Users
      summary: R√©cup√©rer les utilisateurs retrait√©s
      description: R√©cup√®re la liste des utilisateurs retrait√©s
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Liste des utilisateurs retrait√©s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /users/stats:
    get:
      tags:
        - Users
      summary: R√©cup√©rer les statistiques des utilisateurs
      description: R√©cup√®re les statistiques des utilisateurs
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Statistiques des utilisateurs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /users/{id}/network:
    get:
      tags:
        - Users
      summary: R√©cup√©rer le r√©seau d'un utilisateur
      description: R√©cup√®re le r√©seau d'un utilisateur sp√©cifique
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de l'utilisateur
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: R√©seau de l'utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Utilisateur non trouv√©

  /users/{id}/qualification:
    put:
      tags:
        - Users
      summary: Mettre √† jour la qualification d'un utilisateur
      description: Met √† jour la qualification d'un utilisateur
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de l'utilisateur
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                qualification:
                  type: string
                  enum: [QUALIFICATION_12, QUALIFICATION_144, QUALIFICATION_1728, LEADER, RESPONSABLE_RESEAU, RESPONSABLE_DEPARTEMENT, REGULIER, IRREGULIER, EN_INTEGRATION, GOUVERNANCE, ECODIM, RESPONSABLE_ECODIM, QUALIFICATION_20738, QUALIFICATION_248832, RESPONSABLE_EGLISE]
      responses:
        '200':
          description: Qualification mise √† jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Utilisateur non trouv√©

  /users/{id}/reset-password:
    post:
      tags:
        - Users
      summary: R√©initialiser le mot de passe d'un utilisateur
      description: R√©initialise le mot de passe d'un utilisateur
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de l'utilisateur
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Mot de passe r√©initialis√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Utilisateur non trouv√©

  /churches:
    get:
      tags:
        - Churches
      summary: R√©cup√©rer toutes les √©glises
      description: |
        R√©cup√®re la liste des √©glises avec filtrage automatique selon le r√¥le.
        
        **Filtrage automatique :**
        - **Managers/Collecteurs** : Voir uniquement leur √©glise
        - **Admins** : Voir toutes les √©glises
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Liste des √©glises r√©cup√©r√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    post:
      tags:
        - Churches
      summary: Cr√©er une nouvelle √©glise
      description: |
        Cr√©e une nouvelle √©glise (Super Admin uniquement).
        
        **Permissions requises :**
        - **SUPER_ADMIN** uniquement
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Church'
      responses:
        '201':
          description: √âglise cr√©√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /churches/city-info/{cityName}:
    get:
      tags:
        - Churches
      summary: R√©cup√©rer les informations d'une ville
      description: R√©cup√®re les informations d'une ville sp√©cifique
      parameters:
        - name: cityName
          in: path
          required: true
          description: Nom de la ville
          schema:
            type: string
      responses:
        '200':
          description: Informations de la ville
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Ville non trouv√©e

  /churches/stats:
    get:
      tags:
        - Churches
      summary: R√©cup√©rer les statistiques des √©glises
      description: R√©cup√®re les statistiques des √©glises (Super Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Statistiques des √©glises
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /churches/{id}:
    get:
      tags:
        - Churches
      summary: R√©cup√©rer une √©glise par ID
      description: R√©cup√®re les d√©tails d'une √©glise sp√©cifique
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de l'√©glise
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: √âglise r√©cup√©r√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: √âglise non trouv√©e

    put:
      tags:
        - Churches
      summary: Mettre √† jour une √©glise
      description: Met √† jour une √©glise (Super Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de l'√©glise
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Church'
      responses:
        '200':
          description: √âglise mise √† jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: √âglise non trouv√©e

    patch:
      tags:
        - Churches
      summary: Mettre √† jour partiellement une √©glise
      description: Met √† jour partiellement une √©glise (Super Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de l'√©glise
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Church'
      responses:
        '200':
          description: √âglise mise √† jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: √âglise non trouv√©e

    delete:
      tags:
        - Churches
      summary: Supprimer une √©glise
      description: Supprime une √©glise (Super Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de l'√©glise
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: √âglise supprim√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: √âglise non trouv√©e

  /networks:
    get:
      tags:
        - Networks
      summary: R√©cup√©rer tous les r√©seaux
      description: |
        R√©cup√®re la liste des r√©seaux avec filtrage automatique par √©glise.
        
        **Filtrage automatique :**
        - **Managers/Collecteurs** : Voir uniquement les r√©seaux de leur √©glise
        - **Admins** : Voir tous les r√©seaux
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Liste des r√©seaux r√©cup√©r√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    post:
      tags:
        - Networks
      summary: Cr√©er un nouveau r√©seau
      description: |
        Cr√©e un nouveau r√©seau avec validation des permissions.
        
        **Restrictions automatiques :**
        - **Managers** : Ne peuvent cr√©er que des r√©seaux dans leur √©glise
        - **Admins** : Peuvent cr√©er des r√©seaux dans n'importe quelle √©glise
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
      responses:
        '201':
          description: R√©seau cr√©√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /networks/stats:
    get:
      tags:
        - Networks
      summary: R√©cup√©rer les statistiques des r√©seaux
      description: R√©cup√®re les statistiques des r√©seaux (Admin/Manager uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Statistiques des r√©seaux
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /networks/qualification-stats:
    get:
      tags:
        - Networks
      summary: R√©cup√©rer les statistiques de qualification des r√©seaux
      description: R√©cup√®re les statistiques de qualification des r√©seaux (Admin/Manager uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Statistiques de qualification des r√©seaux
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /networks/{id}:
    get:
      tags:
        - Networks
      summary: R√©cup√©rer un r√©seau par ID
      description: R√©cup√®re les d√©tails d'un r√©seau sp√©cifique
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du r√©seau
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: R√©seau r√©cup√©r√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: R√©seau non trouv√©

    put:
      tags:
        - Networks
      summary: Mettre √† jour un r√©seau
      description: Met √† jour un r√©seau avec validation des permissions
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du r√©seau
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
      responses:
        '200':
          description: R√©seau mis √† jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: R√©seau non trouv√©

    delete:
      tags:
        - Networks
      summary: Supprimer un r√©seau
      description: Supprime un r√©seau avec validation des permissions
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du r√©seau
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: R√©seau supprim√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: R√©seau non trouv√©

  /networks/{id}/stats:
    get:
      tags:
        - Networks
      summary: R√©cup√©rer les statistiques d'un r√©seau
      description: R√©cup√®re les statistiques d'un r√©seau sp√©cifique
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du r√©seau
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Statistiques du r√©seau
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: R√©seau non trouv√©

  /networks/{id}/grs:
    get:
      tags:
        - Networks
      summary: R√©cup√©rer les groupes d'un r√©seau
      description: R√©cup√®re la liste des groupes d'un r√©seau
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du r√©seau
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Groupes du r√©seau
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: R√©seau non trouv√©

  /networks/{id}/members:
    get:
      tags:
        - Networks
      summary: R√©cup√©rer les membres d'un r√©seau
      description: R√©cup√®re la liste des membres d'un r√©seau
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du r√©seau
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Membres du r√©seau
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: R√©seau non trouv√©

  /groups:
    get:
      tags:
        - Groups
      summary: R√©cup√©rer tous les groupes
      description: R√©cup√®re la liste des groupes avec filtrage automatique par √©glise
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Liste des groupes r√©cup√©r√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

    post:
      tags:
        - Groups
      summary: Cr√©er un nouveau groupe
      description: Cr√©e un nouveau groupe avec validation des permissions
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          description: Groupe cr√©√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /groups/available-responsables:
    get:
      tags:
        - Groups
      summary: R√©cup√©rer les responsables disponibles
      description: R√©cup√®re la liste des responsables disponibles pour le sup√©rieur hi√©rarchique
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Responsables disponibles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /groups/{id}:
    get:
      tags:
        - Groups
      summary: R√©cup√©rer un groupe par ID
      description: R√©cup√®re les d√©tails d'un groupe sp√©cifique
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du groupe
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Groupe r√©cup√©r√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Groupe non trouv√©

    put:
      tags:
        - Groups
      summary: Mettre √† jour un groupe
      description: Met √† jour un groupe avec validation des permissions
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du groupe
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: Groupe mis √† jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: Groupe non trouv√©

    delete:
      tags:
        - Groups
      summary: Supprimer un groupe
      description: Supprime un groupe avec validation des permissions
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du groupe
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Groupe supprim√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: Groupe non trouv√©

  /groups/{id}/members:
    post:
      tags:
        - Groups
      summary: Ajouter un membre au groupe
      description: Ajoute un membre √† un groupe
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du groupe
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  format: uuid
                  description: ID de l'utilisateur √† ajouter
      responses:
        '200':
          description: Membre ajout√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: Groupe non trouv√©

  /groups/{id}/members/{userId}:
    delete:
      tags:
        - Groups
      summary: Retirer un membre du groupe
      description: Retire un membre d'un groupe
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du groupe
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          description: ID de l'utilisateur
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Membre retir√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: Groupe ou utilisateur non trouv√©

  /departments:
    get:
      tags:
        - Departments
      summary: R√©cup√©rer tous les d√©partements
      description: R√©cup√®re la liste des d√©partements (accessible sans authentification)
      responses:
        '200':
          description: Liste des d√©partements r√©cup√©r√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /departments/stats:
    get:
      tags:
        - Departments
      summary: R√©cup√©rer les statistiques des d√©partements
      description: R√©cup√®re les statistiques des d√©partements (Super Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Statistiques des d√©partements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /departments/{id}:
    get:
      tags:
        - Departments
      summary: R√©cup√©rer un d√©partement par ID
      description: R√©cup√®re les d√©tails d'un d√©partement sp√©cifique
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du d√©partement
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: D√©partement r√©cup√©r√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: D√©partement non trouv√©

    put:
      tags:
        - Departments
      summary: Mettre √† jour un d√©partement
      description: Met √† jour un d√©partement (Super Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du d√©partement
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '200':
          description: D√©partement mis √† jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: D√©partement non trouv√©

    delete:
      tags:
        - Departments
      summary: Supprimer un d√©partement
      description: Supprime un d√©partement (Super Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du d√©partement
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: D√©partement supprim√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: D√©partement non trouv√©

  /departments/{id}/members:
    get:
      tags:
        - Departments
      summary: R√©cup√©rer les membres d'un d√©partement
      description: R√©cup√®re la liste des membres d'un d√©partement
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du d√©partement
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Membres du d√©partement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: D√©partement non trouv√©

  /departments:
    post:
      tags:
        - Departments
      summary: Cr√©er un nouveau d√©partement
      description: Cr√©e un nouveau d√©partement (Super Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '201':
          description: D√©partement cr√©√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /services:
    get:
      tags:
        - Services
      summary: R√©cup√©rer tous les services
      description: |
        R√©cup√®re la liste des services avec filtrage automatique par √©glise.
        
        **Filtrage automatique :**
        - **Managers/Collecteurs** : Voir uniquement les services de leur √©glise
        - **Admins** : Voir tous les services
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Liste des services r√©cup√©r√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    post:
      tags:
        - Services
      summary: Cr√©er un nouveau service
      description: |
        Cr√©e un nouveau service avec validation des permissions.
        
        **Restrictions automatiques :**
        - **Managers/Collecteurs** : Ne peuvent cr√©er que des services dans leur √©glise
        - **Admins** : Peuvent cr√©er des services dans n'importe quelle √©glise
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '201':
          description: Service cr√©√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /services/stats:
    get:
      tags:
        - Services
      summary: R√©cup√©rer les statistiques des services
      description: R√©cup√®re les statistiques des services (Admin/Manager uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Statistiques des services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /services/period:
    get:
      tags:
        - Services
      summary: R√©cup√©rer les services par p√©riode
      description: R√©cup√®re les services d'une p√©riode sp√©cifique
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: startDate
          in: query
          description: Date de d√©but
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Date de fin
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Services de la p√©riode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /services/{id}:
    get:
      tags:
        - Services
      summary: R√©cup√©rer un service par ID
      description: R√©cup√®re les d√©tails d'un service sp√©cifique
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du service
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Service r√©cup√©r√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Service non trouv√©

    put:
      tags:
        - Services
      summary: Mettre √† jour un service
      description: Met √† jour un service avec validation des permissions
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du service
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '200':
          description: Service mis √† jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: Service non trouv√©

    delete:
      tags:
        - Services
      summary: Supprimer un service
      description: Supprime un service avec validation des permissions
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du service
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Service supprim√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: Service non trouv√©

  /stats:
    get:
      tags:
        - Statistics
      summary: R√©cup√©rer les statistiques globales
      description: |
        R√©cup√®re les statistiques compl√®tes du syst√®me avec cache intelligent.
        
        **Fonctionnalit√©s :**
        - **Cache serveur** : Mise en cache des statistiques (2-5 minutes)
        - **Optimisation** : Requ√™tes PostgreSQL optimis√©es
        - **Timeout** : 30 secondes pour les requ√™tes lourdes
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Statistiques r√©cup√©r√©es
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
                data:
                  totalUsers: 69
                  totalChurches: 9
                  totalNetworks: 15
                  totalGroups: 7
                  totalServices: 27
                  qualificationDistribution: [...]
                  roleDistribution: [...]
                  genreDistribution: [...]
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '408':
          description: Timeout de la requ√™te
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "La g√©n√©ration des statistiques prend plus de temps que pr√©vu. Veuillez r√©essayer."

  /admin/clear-cache:
    post:
      tags:
        - Admin
      summary: Nettoyer le cache
      description: |
        Nettoie le cache serveur (Admin uniquement).
        
        **Permissions requises :**
        - **ADMIN** ou **SUPER_ADMIN**
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pattern:
                  type: string
                  description: Pattern pour nettoyer une partie sp√©cifique du cache
                  example: "stats"
      responses:
        '200':
          description: Cache nettoy√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /admin/cache-status:
    get:
      tags:
        - Admin
      summary: Voir l'√©tat du cache
      description: |
        Affiche l'√©tat actuel du cache serveur (Admin uniquement).
        
        **Permissions requises :**
        - **ADMIN** ou **SUPER_ADMIN**
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: √âtat du cache r√©cup√©r√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'


  /security/stats:
    get:
      tags:
        - Security
      summary: R√©cup√©rer les statistiques de s√©curit√©
      description: R√©cup√®re les statistiques de s√©curit√© du syst√®me
      responses:
        '200':
          description: Statistiques de s√©curit√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /messages/send:
    post:
      tags:
        - Messages
      summary: Envoyer un message
      description: Envoie un message √† un ou plusieurs utilisateurs
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          description: Message envoy√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /messages/received:
    get:
      tags:
        - Messages
      summary: R√©cup√©rer les messages re√ßus
      description: R√©cup√®re les messages re√ßus par l'utilisateur connect√©
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Messages re√ßus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /messages/sent:
    get:
      tags:
        - Messages
      summary: R√©cup√©rer les messages envoy√©s
      description: R√©cup√®re les messages envoy√©s par l'utilisateur connect√©
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Messages envoy√©s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /messages/conversations:
    get:
      tags:
        - Messages
      summary: R√©cup√©rer les conversations
      description: R√©cup√®re la liste des conversations de l'utilisateur connect√©
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Conversations r√©cup√©r√©es
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /messages/{id}/read:
    put:
      tags:
        - Messages
      summary: Marquer un message comme lu
      description: Marque un message comme lu
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du message
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Message marqu√© comme lu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Message non trouv√©

  /messages/mark-multiple-read:
    put:
      tags:
        - Messages
      summary: Marquer plusieurs messages comme lus
      description: Marque plusieurs messages comme lus
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                messageIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: IDs des messages √† marquer comme lus
      responses:
        '200':
          description: Messages marqu√©s comme lus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /messages/{id}/acknowledge:
    put:
      tags:
        - Messages
      summary: Accuser r√©ception d'un message
      description: Accuse r√©ception d'un message
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du message
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: R√©ception accus√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Message non trouv√©

  /messages/stats:
    get:
      tags:
        - Messages
      summary: R√©cup√©rer les statistiques des messages
      description: R√©cup√®re les statistiques des messages de l'utilisateur connect√©
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Statistiques des messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /messages/users:
    get:
      tags:
        - Messages
      summary: R√©cup√©rer les utilisateurs pour la messagerie
      description: R√©cup√®re la liste des utilisateurs disponibles pour la messagerie
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Utilisateurs pour la messagerie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /messages/conversation/{userId}:
    get:
      tags:
        - Messages
      summary: R√©cup√©rer l'historique d'une conversation
      description: R√©cup√®re l'historique d'une conversation avec un utilisateur sp√©cifique
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: userId
          in: path
          required: true
          description: ID de l'utilisateur
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Historique de la conversation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Utilisateur non trouv√©

  /messages/{messageId}/read-status:
    get:
      tags:
        - Messages
      summary: R√©cup√©rer le statut de lecture d'un message
      description: R√©cup√®re le statut de lecture d'un message
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: messageId
          in: path
          required: true
          description: ID du message
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Statut de lecture du message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Message non trouv√©

  /emergency/create-super-admin:
    post:
      tags:
        - Emergency
      summary: Cr√©er un super admin d'urgence
      description: Cr√©e un super admin d'urgence (ne fonctionne que si aucun super admin n'existe)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Nom d'utilisateur
                pseudo:
                  type: string
                  description: Pseudo
                password:
                  type: string
                  description: Mot de passe
                email:
                  type: string
                  format: email
                  description: Email
      responses:
        '201':
          description: Super admin cr√©√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '409':
          description: Un super admin existe d√©j√†

  /roles/change-role:
    post:
      tags:
        - Roles
      summary: Changer de r√¥le
      description: Permet √† un utilisateur de changer de r√¥le parmi ses r√¥les assign√©s
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum: [ADMIN, SUPER_ADMIN, MANAGER, SUPERVISEUR, COLLECTEUR_RESEAUX, COLLECTEUR_CULTE, MEMBRE]
                  description: Nouveau r√¥le √† activer
      responses:
        '200':
          description: R√¥le chang√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /roles/available-roles:
    get:
      tags:
        - Roles
      summary: R√©cup√©rer les r√¥les disponibles
      description: R√©cup√®re les r√¥les disponibles pour l'utilisateur connect√©
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: R√¥les disponibles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /roles/assign:
    post:
      tags:
        - Roles
      summary: Assigner un r√¥le √† un utilisateur
      description: Assigne un r√¥le √† un utilisateur (Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  format: uuid
                  description: ID de l'utilisateur
                role:
                  type: string
                  enum: [ADMIN, SUPER_ADMIN, MANAGER, SUPERVISEUR, COLLECTEUR_RESEAUX, COLLECTEUR_CULTE, MEMBRE]
                  description: R√¥le √† assigner
      responses:
        '200':
          description: R√¥le assign√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /roles/remove:
    delete:
      tags:
        - Roles
      summary: Retirer un r√¥le d'un utilisateur
      description: Retire un r√¥le d'un utilisateur (Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  format: uuid
                  description: ID de l'utilisateur
                role:
                  type: string
                  enum: [ADMIN, SUPER_ADMIN, MANAGER, SUPERVISEUR, COLLECTEUR_RESEAUX, COLLECTEUR_CULTE, MEMBRE]
                  description: R√¥le √† retirer
      responses:
        '200':
          description: R√¥le retir√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /roles/assign-multiple:
    post:
      tags:
        - Roles
      summary: Assigner plusieurs r√¥les √† un utilisateur
      description: Assigne plusieurs r√¥les √† un utilisateur (Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  format: uuid
                  description: ID de l'utilisateur
                roles:
                  type: array
                  items:
                    type: string
                    enum: [ADMIN, SUPER_ADMIN, MANAGER, SUPERVISEUR, COLLECTEUR_RESEAUX, COLLECTEUR_CULTE, MEMBRE]
                  description: R√¥les √† assigner
      responses:
        '200':
          description: R√¥les assign√©s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /roles/user/{userId}:
    get:
      tags:
        - Roles
      summary: R√©cup√©rer les r√¥les d'un utilisateur
      description: R√©cup√®re les r√¥les d'un utilisateur sp√©cifique (Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: userId
          in: path
          required: true
          description: ID de l'utilisateur
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: R√¥les de l'utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Utilisateur non trouv√©

  /preferences:
    get:
      tags:
        - Preferences
      summary: R√©cup√©rer les pr√©f√©rences de l'utilisateur
      description: R√©cup√®re les pr√©f√©rences de l'utilisateur connect√©
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Pr√©f√©rences r√©cup√©r√©es
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

    put:
      tags:
        - Preferences
      summary: Mettre √† jour les pr√©f√©rences de l'utilisateur
      description: Met √† jour les pr√©f√©rences de l'utilisateur connect√©
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                language:
                  type: string
                  description: Langue pr√©f√©r√©e
                theme:
                  type: string
                  description: Th√®me pr√©f√©r√©
                email_notifications:
                  type: boolean
                  description: Notifications email activ√©es
      responses:
        '200':
          description: Pr√©f√©rences mises √† jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /preferences/email:
    put:
      tags:
        - Preferences
      summary: Mettre √† jour les pr√©f√©rences email
      description: Met √† jour uniquement les pr√©f√©rences email de l'utilisateur connect√©
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_notifications:
                  type: boolean
                  description: Notifications email activ√©es
      responses:
        '200':
          description: Pr√©f√©rences email mises √† jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /testimonies/churches:
    get:
      tags:
        - Testimonies
      summary: R√©cup√©rer les √©glises pour les t√©moignages
      description: R√©cup√®re la liste des √©glises disponibles pour les t√©moignages (accessible sans authentification)
      responses:
        '200':
          description: √âglises r√©cup√©r√©es
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /testimonies/networks/{churchId}:
    get:
      tags:
        - Testimonies
      summary: R√©cup√©rer les r√©seaux d'une √©glise
      description: R√©cup√®re les r√©seaux d'une √©glise pour les t√©moignages (accessible sans authentification)
      parameters:
        - name: churchId
          in: path
          required: true
          description: ID de l'√©glise
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: R√©seaux de l'√©glise
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: √âglise non trouv√©e

  /testimonies/categories:
    get:
      tags:
        - Testimonies
      summary: R√©cup√©rer les cat√©gories de t√©moignages
      description: R√©cup√®re la liste des cat√©gories de t√©moignages (accessible sans authentification)
      responses:
        '200':
          description: Cat√©gories r√©cup√©r√©es
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /testimonies/approved:
    get:
      tags:
        - Testimonies
      summary: R√©cup√©rer les t√©moignages approuv√©s
      description: R√©cup√®re la liste des t√©moignages approuv√©s (accessible sans authentification)
      responses:
        '200':
          description: T√©moignages approuv√©s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /testimonies/admin/all:
    get:
      tags:
        - Testimonies
      summary: R√©cup√©rer tous les t√©moignages (Admin)
      description: R√©cup√®re tous les t√©moignages pour l'administration
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Tous les t√©moignages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /testimonies:
    post:
      tags:
        - Testimonies
      summary: Cr√©er un t√©moignage
      description: Cr√©e un nouveau t√©moignage (accessible sans authentification)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Testimony'
      responses:
        '201':
          description: T√©moignage cr√©√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'

  /testimonies/{id}:
    get:
      tags:
        - Testimonies
      summary: R√©cup√©rer un t√©moignage par ID
      description: R√©cup√®re les d√©tails d'un t√©moignage sp√©cifique
      parameters:
        - name: id
          in: path
          required: true
          description: ID du t√©moignage
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: T√©moignage r√©cup√©r√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: T√©moignage non trouv√©

    delete:
      tags:
        - Testimonies
      summary: Supprimer un t√©moignage
      description: Supprime un t√©moignage (Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du t√©moignage
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: T√©moignage supprim√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: T√©moignage non trouv√©

  /testimonies/{id}/mark-read:
    put:
      tags:
        - Testimonies
      summary: Marquer un t√©moignage comme lu
      description: Marque un t√©moignage comme lu (Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du t√©moignage
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: T√©moignage marqu√© comme lu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: T√©moignage non trouv√©

  /testimonies/{id}/note:
    put:
      tags:
        - Testimonies
      summary: Ajouter une note √† un t√©moignage
      description: Ajoute une note administrative √† un t√©moignage (Admin uniquement)
      security:
        - BearerAuth: []
        - CSRFProtection: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID du t√©moignage
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: string
                  description: Note administrative
      responses:
        '200':
          description: Note ajout√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
        '404':
          description: T√©moignage non trouv√©

  /activities/history:
    get:
      tags:
        - Activities
      summary: R√©cup√©rer l'historique des activit√©s
      description: R√©cup√®re l'historique des activit√©s de l'utilisateur connect√©
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Historique des activit√©s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /activities/stats:
    get:
      tags:
        - Activities
      summary: R√©cup√©rer les statistiques des activit√©s
      description: R√©cup√®re les statistiques des activit√©s
      security:
        - BearerAuth: []
        - CSRFProtection: []
      responses:
        '200':
          description: Statistiques des activit√©s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'

  /activities/log:
    post:
      tags:
        - Activities
      summary: Enregistrer une activit√©
      description: Enregistre une nouvelle activit√©
      security:
        - BearerAuth: []
        - CSRFProtection: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityLog'
      responses:
        '201':
          description: Activit√© enregistr√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/CSRFError'
