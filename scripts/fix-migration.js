const { execSync } = require('child_process');

async function fixFailedMigration() {
  try {
    console.log('üîß G√©n√©ration du client Prisma...');
    execSync('npx prisma generate', { stdio: 'inherit' });
    
    console.log('üîß Connexion √† la base de donn√©es pour nettoyer les migrations √©chou√©es...');
    const { PrismaClient } = require('@prisma/client');
    const prisma = new PrismaClient();
    
    // Supprimer TOUTES les migrations √©chou√©es ou en attente
    console.log('üßπ Suppression des migrations en √©chec...');
    const result = await prisma.$executeRaw`
      DELETE FROM "_prisma_migrations" 
      WHERE finished_at IS NULL OR (started_at IS NOT NULL AND finished_at IS NULL)
    `;
    
    console.log(`‚úÖ ${result} migrations √©chou√©es supprim√©es`);
    
    await prisma.$disconnect();
    
    console.log('üöÄ Application des migrations...');
    execSync('npx prisma migrate deploy', { stdio: 'inherit' });
    
    console.log('‚úÖ Migrations appliqu√©es avec succ√®s');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©solution de la migration:', error.message);
    console.log('‚ö†Ô∏è  D√©marrant le serveur malgr√© l\'erreur de migration...');
  }
}

fixFailedMigration().catch(console.error);
